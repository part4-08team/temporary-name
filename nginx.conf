events {}

http {
  include       mime.types;
  default_type  application/octet-stream;

  upstream backend_server {
    server app:8080;
  }

  server {
      listen 80;
      server_name _;
      return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl http2;
    server_name _;

    ssl_certificate     /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location ^~ /api/sse {
      proxy_pass http://backend_server/api/sse;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Content-Type text/event-stream;
      proxy_set_header X-Accel-Buffering 'no';  # Disable Nginx buffering
      proxy_buffering off;                      # Disable response buffering completely
      proxy_http_version 1.1;                   # Support keep-alive
    }

    location ^~ /api/ {
      proxy_pass http://backend_server/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ^~ /ws/ {
      proxy_pass http://backend_server/ws/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_http_version 1.1;
    }

    location / {
      root /usr/share/nginx/html;
      try_files $uri $uri/ /index.html;
      index index.html;
    }
  }
}
