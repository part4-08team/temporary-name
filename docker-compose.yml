services:
  reverse-proxy:
    image: nginx:1.28.0
    container_name: reverse-proxy
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    networks:
      - closet-network
    volumes:
      - ./src/main/resources/static:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl/server.crt:/etc/nginx/ssl/server.crt:ro
      - ./nginx/ssl/server.key:/etc/nginx/ssl/server.key:ro

  app:
    image: 592835403754.dkr.ecr.ap-northeast-2.amazonaws.com/ootd-closet:latest
    container_name: closet
    env_file:
      - .env
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    volumes:
      - ./logs:/app/.logs
    depends_on:
      - db
      - redis
    networks:
      - closet-network

  db:
    container_name: closet-postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: closet
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/main/resources/sql/schema.sql:/docker-entrypoint-initdb.d/001-schema.sql
      - ./src/main/resources/sql/seed-temperature-dml.sql:/docker-entrypoint-initdb.d/002-seed-temperature-dml.sql
      - ./src/main/resources/sql/seed-attributes-dml.sql:/docker-entrypoint-initdb.d/003-seed-attributes-dml.sql
    ports:
      - "5433:5432"
    networks:
      - closet-network

  redis:
    container_name: closet-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - closet-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s

  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
        - prometheus-data:/prometheus
      networks:
        - closet-network
      depends_on:
        - app

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_DATABASE_SQLITE_WAL_ENABLED=true
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
        - closet-network
    depends_on:
      - prometheus

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data:
networks:
  closet-network:
    driver: bridge
